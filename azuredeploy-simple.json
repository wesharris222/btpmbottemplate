{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "botName": {
      "type": "string",
      "metadata": {
        "description": "Name for the bot"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for deployment"
      }
    },
    "microsoftAppId": {
      "type": "string",
      "metadata": {
        "description": "Microsoft App ID (from Azure AD app registration)"
      }
    },
    "microsoftAppPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Microsoft App Password (from Azure AD app registration)"
      }
    },
    "microsoftAppTenantId": {
      "type": "string",
      "metadata": {
        "description": "Microsoft App Tenant ID"
      }
    },
    "beyondTrustBaseUrl": {
      "type": "string",
      "metadata": {
        "description": "BeyondTrust base URL"
      }
    },
    "beyondTrustClientId": {
      "type": "string",
      "metadata": {
        "description": "BeyondTrust Client ID"
      }
    },
    "beyondTrustClientSecret": {
      "type": "securestring",
      "metadata": {
        "description": "BeyondTrust Client Secret"
      }
    }
  },
  "variables": {
    "storageAccountName": "[take(concat(toLower(replace(parameters('botName'), '[^a-z0-9]', '')), 'stor'), 24)]",
    "appServicePlanName": "[concat(parameters('botName'), '-plan')]",
    "functionAppName": "[concat(toLower(replace(parameters('botName'), '[^a-z0-9-]', '')), '-func')]",
    "webAppName": "[parameters('botName')]",
    "functionHostingPlanName": "[concat(parameters('botName'), '-consumption-plan')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-01-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "F1",
        "tier": "Free"
      },
      "properties": {
        "reserved": false
      }
    },
    {
      "type": "Microsoft.BotService/botServices",
      "apiVersion": "2022-09-15",
      "name": "[parameters('botName')]",
      "location": "global",
      "sku": {
        "name": "F0"
      },
      "kind": "azurebot",
      "properties": {
        "displayName": "[parameters('botName')]",
        "iconUrl": "https://docs.botframework.com/static/devportal/client/images/bot-framework-default.png",
        "endpoint": "[concat('https://', variables('webAppName'), '.azurewebsites.net/api/messages')]",
        "msaAppId": "[parameters('microsoftAppId')]",
        "msaAppType": "MultiTenant",
        "msaAppTenantId": ""
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-01-01",
      "name": "[variables('functionHostingPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y"
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-01-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp,linux",
      "properties": {
        "reserved": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionHostingPlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "node|20",
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2023-01-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2023-01-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~20"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "MicrosoftAppId",
              "value": "[parameters('microsoftAppId')]"
            },
            {
              "name": "MicrosoftAppPassword",
              "value": "[parameters('microsoftAppPassword')]"
            },
            {
              "name": "MicrosoftAppTenantId",
              "value": "[parameters('microsoftAppTenantId')]"
            },
            {
              "name": "AzureStorageConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2023-01-01').keys[0].value)]"
            },
            {
              "name": "BEYONDTRUST_BASE_URL",
              "value": "[parameters('beyondTrustBaseUrl')]"
            },
            {
              "name": "BEYONDTRUST_CLIENT_ID",
              "value": "[parameters('beyondTrustClientId')]"
            },
            {
              "name": "BEYONDTRUST_CLIENT_SECRET",
              "value": "[parameters('beyondTrustClientSecret')]"
            },
            {
              "name": "NODE_ENV",
              "value": "production"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('functionHostingPlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-01-01",
      "name": "[variables('webAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "nodeVersion": "~20",
          "appSettings": [
            {
              "name": "MicrosoftAppId",
              "value": "[parameters('microsoftAppId')]"
            },
            {
              "name": "MicrosoftAppPassword",
              "value": "[parameters('microsoftAppPassword')]"
            },
            {
              "name": "MicrosoftAppTenantId",
              "value": "[parameters('microsoftAppTenantId')]"
            },
            {
              "name": "AzureStorageConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2023-01-01').keys[0].value)]"
            },
            {
              "name": "BEYONDTRUST_BASE_URL",
              "value": "[parameters('beyondTrustBaseUrl')]"
            },
            {
              "name": "BEYONDTRUST_CLIENT_ID",
              "value": "[parameters('beyondTrustClientId')]"
            },
            {
              "name": "BEYONDTRUST_CLIENT_SECRET",
              "value": "[parameters('beyondTrustClientSecret')]"
            },
            {
              "name": "NODE_ENV",
              "value": "production"
            },
            {
              "name": "FUNCTIONAPP_URL",
              "value": "[concat('https://', variables('functionAppName'), '.azurewebsites.net/api/handleapproval')]"
            },
            {
              "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
              "value": "true"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~20"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "https://teams.microsoft.com",
              "https://*.teams.microsoft.com",
              "https://outlook.office.com",
              "https://outlook.office365.com"
            ]
          }
        }
      }
    }
  ],
  "outputs": {
    "botId": {
      "type": "string",
      "value": "[parameters('microsoftAppId')]"
    },
    "botEndpoint": {
      "type": "string",
      "value": "[concat('https://', variables('webAppName'), '.azurewebsites.net')]"
    },
    "functionAppUrl": {
      "type": "string",
      "value": "[concat('https://', variables('functionAppName'), '.azurewebsites.net')]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "functionAppName": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    },
    "webAppName": {
      "type": "string",
      "value": "[variables('webAppName')]"
    }
  }
}